<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	
    <bean id="org.h2.tools.Server"
                class="org.h2.tools.Server"
                factory-method="createTcpServer"
                init-method="start"
                destroy-method="stop">
        <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,8043" />
    </bean>

    <!-- Run database refactorings at startup using Liquibase -->
    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource" />
        <property name="changeLog" value="classpath:database/database-struct.xml" />

          <!-- contexts specifies the runtime contexts to use.  -->
          <!--
          <property name="contexts" value="demo, production" />
          -->
    </bean>

    <bean id="initialUser" class="eionet.transfer.dao.InitialUser"
        depends-on="org.h2.tools.Server" init-method="createUser">
        <property name="userManagementService" ref="userService"/>
        <property name="initialUser" value="prevert"/>
    </bean>

</beans>
