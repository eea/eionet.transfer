<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>eionet</groupId>
    <artifactId>transfer</artifactId>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java_version>1.8</java_version>
        <spring.version>4.3.25.RELEASE</spring.version>
        <spring.security.version>4.2.13.RELEASE</spring.security.version>
        <thymeleaf.version>2.1.6.RELEASE</thymeleaf.version>
        <checkstyle.config.location>${basedir}/doc/checkstyle.xml</checkstyle.config.location>
        <!-- <liquibase.changeLogFile>database/database-struct.xml</liquibase.changeLogFile> -->
        <docker.maven.plugin.rhuss.version>0.31.0</docker.maven.plugin.rhuss.version>
    </properties>

    <version>1.2.1</version>
    <name>transfer</name>
    <url>http://transfer.eionet.europa.eu</url>

    <scm>
        <connection>scm:git:git://github.com/eea/eionet.transfer.git</connection>
    </scm>

    <!-- configuration of Maven repositories to be used -->

    <repositories>
        <repository>
            <id>org.springframework.maven.release</id>
            <name>Spring Maven Repository</name>
            <url>http://maven.springframework.org/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>eea</id>
            <name>EEA Release Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/internal</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>archiva.snapshots</id>
            <name>Internal Snapshot Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <finalName>transfer</finalName>

        <plugins>

            <!-- Configure maven compiler -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <inherited>true</inherited>
                <configuration>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                    <verbose>false</verbose>
                    <fork>false</fork>
                    <compilerVersion>${java_version}</compilerVersion>
                    <source>${java_version}</source>
                    <target>${java_version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- Configure Eclipse plugin -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <wtpversion>2.0</wtpversion>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>

            <!-- Configure Surefire plugin (for executing unit tests) -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <configuration>
                  <systemPropertyVariables>
                    <swift.username>elefant</swift.username>
                    <swift.password></swift.password>
                    <swift.authurl>https://identity.stack.cloudvps.com/v2.0</swift.authurl>
                    <swift.tenantid>771b8f3c956b4244bf355a135cdfc580</swift.tenantid>
                    <swift.mock>true</swift.mock>
                  </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- Configure WAR plugin (for building WAR application) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${basedir}/database</directory>
                            <targetPath>WEB-INF/classes/database</targetPath>
                            <includes>
                                <include>*.xml</include>
                                <include>*.content</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <!-- See http://www.mojohaus.org/buildnumber-maven-plugin/ -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <configuration>
                    <!--
                    <format>{0,date,yyyy-MM-dd'T'HHmm}</format>
                    <items>
                        <item>timestamp</item>
                    </items>
                    -->
                    <shortRevisionLength>7</shortRevisionLength>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                     </execution>
                </executions>
            </plugin>

            <!-- Update database tables -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <formats>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <!-- <effort>Max</effort> -->
                    <threshold>Medium</threshold>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>
        </plugins>

        <!-- resources for the main code -->

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>log4j.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>*.xml</include>
                    <include>*.ttf</include>
                </includes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <excludes>
                    <exclude>*.properties</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.properties</include>
                </includes>
            </testResource>
        </testResources>


    </build>

    <!-- dependencies -->

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-cas</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.13</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.4</version>
        </dependency>

        <dependency>
            <groupId>org.javaswift</groupId>
            <artifactId>joss</artifactId>
            <version>0.9.8</version>
        </dependency>
        <!-- Spring 4 (Requires Tomcat 7) -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.190</version>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>3.3.1</version>
        </dependency>
        <!-- Thymeleaf -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring4</artifactId>
            <version>${thymeleaf.version}</version>
        </dependency>
        <dependency> <!-- https://github.com/thymeleaf/thymeleaf-extras-springsecurity -->
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <!--CAS client-->
        <dependency>
            <groupId>org.jasig.cas.client</groupId>
            <artifactId>cas-client-core</artifactId>
            <version>3.1.12</version>
            <scope>compile</scope>
        </dependency>

        <!-- TEST dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring.security.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.5.1</version>
            <scope>test</scope>
        </dependency>

        <!-- End TEST dependencies -->

    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <linkXref>false</linkXref>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>300</minimumTokens>
                    <targetJdk>1.6</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <configLocation>${checkstyle.config.location}</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
          <id>docker</id>
          <properties>
            <tomcat.port>4580</tomcat.port>
          </properties>
          <!--
          <dependencies>
            <dependency>
                <groupId>eionet</groupId>
                <artifactId>jolokia</artifactId>
                <version>1.0-SNAPSHOT</version>
                <type>war</type>
            </dependency>
          </dependencies>
          -->
          <build>
            <plugins>
              <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.rhuss.version}</version>
                <configuration>
                  <verbose>false</verbose>
                  <logDate>default</logDate>
                  <autoPull>true</autoPull>
                  <images>
                    <image>
                      <alias>service</alias>
                      <name>eeacms/${project.artifactId}</name>
                      <build>
                        <from>tomcat:8.5.47-jdk8</from>
                        <maintainer>Søren Roug &lt;soren.roug@eea.europa.eu&gt;</maintainer>
                        <tags>
                          <tag>latest</tag>
                          <tag>${project.version}</tag>
                          <tag>${buildNumber}</tag>
                        </tags>
                        <assembly>
                          <descriptor>assembly.xml</descriptor>
                        </assembly>
                        <runCmds>
                          <run>rm -rf /usr/local/tomcat/webapps/*</run>
                          <run>mv /maven/transfer.war /usr/local/tomcat/webapps/ROOT.war</run>
                          <!--
                          <run>mv /maven/jolokia.war /usr/local/tomcat/webapps/jolokia.war</run>
                          -->
                        </runCmds>
                        <optimise>true</optimise>

                        <!-- Expose ports -->
                        <ports>
                          <port>8080</port>
                          <port>8009</port>
                        </ports>
                        <!-- Default command for the build image -->
                        <!--<cmd>catalina.sh run</cmd> -->
                      </build>

                      <!-- ............................................................... -->
                      <!-- Runtime configuration for starting/stopping/linking containers -->
                      <!-- ............................................................... -->
                      <run>
                        <env>
                          <CATALINA_OPTS>-Dinitial.username=roug -Djava.security.egd=file:/dev/./urandom -Dcas.service=http://localhost:4580 -Ddb.url=jdbc:h2:tcp://database:1521//var/tmp/transferdb</CATALINA_OPTS>
                        </env>
                        <!-- Assign dynamically mapped ports to maven variables (which can be reused in integration tests) -->
                        <ports>
                          <port>tomcat.port:8080</port>
                        </ports>
                        <wait>
                          <!-- Check for this URL to return a 200 return code .... -->
                          <url>http://${docker.host.address}:${tomcat.port}/about</url>
                          <!-- ... but at max 60 seconds -->
                          <time>90000</time>
                        </wait>
                        <links>
                          <link>database</link>
                        </links>
                        <log>
                          <prefix>TC</prefix>
                          <color>cyan</color>
                        </log>
                      </run>
                    </image>

                    <image>
                      <alias>database</alias>
                      <name>eeacms/${project.artifactId}-dbservice</name>
                      <build>
                        <from>java:8</from>
                        <maintainer>Søren Roug &lt;soren.roug@eea.europa.eu&gt;</maintainer>
                        <tags>
                          <tag>latest</tag>
                          <tag>${buildNumber}</tag>
                        </tags>
                        <env>
                          <H2_RELEASE_DATE>2015-10-11</H2_RELEASE_DATE>
                        </env>
                        <workdir>/tmp</workdir>
                        <runCmds>
                          <run>wget http://www.h2database.com/h2-$H2_RELEASE_DATE.zip</run>
                          <run>unzip h2-$H2_RELEASE_DATE.zip</run>
                          <run>rm -f h2-$H2_RELEASE_DATE.zip</run>
                          <run>mv h2 /opt</run>
                        </runCmds>
                        <optimise>true</optimise>

                        <!-- Expose ports -->
                        <ports>
                          <port>1521</port>
                        </ports>
                        <cmd>java -cp /opt/h2/bin/h2*.jar org.h2.tools.Server -tcp -tcpAllowOthers -tcpPort 1521 -baseDir /var/tmp</cmd>
                      </build>
                      <run>
                        <ports>
                          <port>database.port:1521</port>
                        </ports>
                        <wait>
                          <log>TCP server running at </log>
                          <time>6000</time>
                        </wait>
                      </run>
                    </image>
                  </images>

                </configuration>

                <!-- Hooking into the lifecycle -->
                <executions>
                  <execution>
                    <id>start</id>
                    <phase>pre-integration-test</phase>
                    <goals>
                      <goal>build</goal>
                      <goal>start</goal>
                    </goals>
                  </execution>
                  <execution>
                    <id>stop</id>
                    <phase>post-integration-test</phase>
                    <goals>
                      <goal>stop</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>

              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19</version>
                <configuration>
                  <systemPropertyVariables>
                    <log.url>http://${docker.host.address}:${tomcat.port}/jolokia</log.url>
                    <db.url>jdbc:h2:tcp://${docker.host.address}:${database.port}//var/tmp/transferdb</db.url>
                  </systemPropertyVariables>
                </configuration>
                <executions>
                  <execution>
                    <goals>
                      <goal>integration-test</goal>
                      <goal>verify</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>

            </plugins>
          </build>
        </profile>
    </profiles>
</project>
